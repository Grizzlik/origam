<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorNoSequence" xml:space="preserve">
    <value>Zahlenfolge nicht gefunden.</value>
  </data>
  <data name="ErrorNoSequenceForDate" xml:space="preserve">
    <value>Zahlenfolge nicht gefunden für den gewünschten Zeitraum. Reihenfolge: '{0}'.</value>
  </data>
  <data name="ErrorSequenceMax" xml:space="preserve">
    <value>Zahlenfolge '{0}' hat den Maximalwert erreicht. In dieser Folge kann keine weitere Zahl erstellt werden.</value>
  </data>
  <data name="ErrorRuleFailureRecord" xml:space="preserve">
    <value>Regelauswertung fehlgeschlagen beim Verändern eines Datensatzes in der Instanz '{0}'.{1}</value>
  </data>
  <data name="ErrorRuleFailureColumn" xml:space="preserve">
    <value>Regelauswertung fehlgeschlagen beim Verändern eines Feldes '{0}' in der Instanz '{1}'.</value>
  </data>
  <data name="ErrorRuleFailureDelete" xml:space="preserve">
    <value>Regelauswertung fehlgeschlagen beim Löschen eines Datensatzes in der Instanz '{0}'.{1}</value>
  </data>
  <data name="ErrorDeleteFailed" xml:space="preserve">
    <value>Fehler beim Löschen eines Datensatzes in der Instanz '{0}'.{1}</value>
  </data>
  <data name="ErrorRuleFailureCopy" xml:space="preserve">
    <value>Fehler beim Kopieren eines Datensatzes in der Instanz '{0}'.{1}</value>
  </data>
  <data name="ErrorNoRecordInAddressBook" xml:space="preserve">
    <value>Für den aktuellen Anwender wurde kein Datensatz im Adressbuch gefunden.</value>
  </data>
  <data name="ErrorNoResource" xml:space="preserve">
    <value>Ressource nicht gefunden. Bitte ordnen Sie den aktuellen Anwender als Ressource zu.</value>
  </data>
  <data name="ErrorMoreResources" xml:space="preserve">
    <value>Aktueller Anwender ist mehr als 1 Ressource zugeordnet. Bitte ändern Sie Ihre Einstellungen, so dass der Anwender nur einer menschlichen Ressource zugeordnet ist. Ressourcen-Id: {0}</value>
  </data>
  <data name="ErrorRuleFailed" xml:space="preserve">
    <value>Regelauswertung fehlgeschlagen. Regel: '{0}'</value>
  </data>
  <data name="ErrorRuleFailed1" xml:space="preserve">
    <value>Regelauswertung fehlgeschlagen. Regel: '{0}'</value>
  </data>
  <data name="FixXslRuleWithDestinationDataStructure" xml:space="preserve">
    <value>Wählen Sie eine Datenstruktur in einer `Destination Structure' Eigenschaft in der `{0}' xsl Regel um das Problem zu lösen. </value>
  </data>
  <data name="ErrorConvertToType2" xml:space="preserve">
    <value>Wert: '{0}'</value>
  </data>
  <data name="ErrorRuleFailed2" xml:space="preserve">
    <value>Regelauswertung fehlgeschlagen.</value>
  </data>
  <data name="ErrorRecursion" xml:space="preserve">
    <value>Sie haben versucht, einen Wert einzugeben, der einen Selbstbezug bewirken würde (infinite loop). Bitte wählen Sie einen anderen Wert.</value>
  </data>
  <data name="XsltTransformTerminated" xml:space="preserve">
    <value>Umwandlung abgeschlossen:</value>
  </data>
  <data name="ErrorOutputRuleFailed" xml:space="preserve">
    <value>Ausgaberegel wurde nicht erfüllt.</value>
  </data>
</root>